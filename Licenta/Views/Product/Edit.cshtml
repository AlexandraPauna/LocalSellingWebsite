@model Licenta.Common.Entities.Product

@{
    ViewBag.Titlu = "Editare Anunt";
}
<h2>Editare Anunt</h2>
<form method="post" action="/Product/Edit/@Model.ProductId">

    @Html.HttpMethodOverride(HttpVerbs.Put)

    @Html.HiddenFor(m => m.ProductId)
    @Html.HiddenFor(m => m.Date)
    @Html.HiddenFor(m => m.UserId)
    <br />

    <button class="jumbotron" onclick="location.href='@Url.Action("ManageGallery", "Product", new { id = Model.ProductId})';return false;">Modifica Galeria Foto</button>

    <div class="panel panel-default">
        <div class="panel-heading">Editeaza titlu si categoria</div>
        <div class="panel-body">
            @Html.Label("Title", "Titlu Anunt")
            <br />
            @Html.EditorFor(m => m.Title)
            <br /><br />

            <label>Selectati Categoria</label>
            @Html.DropDownList("catList", new SelectList(ViewBag.Categories, "Value", "Text"), "Selectati categoria", new { id = "catList", @class = "form-control" })


            @*<label>Selectati Categoria</label>
                @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "Value", "Text"), "Selectati categoria", new { id = "catList", @class = "form-control" })
                <br /><br />*@

            <label>Selectati Subcategoria</label>
            @Html.DropDownListFor(m => m.SubCategoryId, new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Selectati subcategoria", new { id = "subcatList", @class = "form-control" })
            <br /><br />


        </div>
    </div>
    <br /><br />

    <div class="panel panel-default">
        <div class="panel-heading">Modifica Detaliile Produsului</div>
        <div class="panel-body">
            <label>Selectati Starea Produsului</label>
            @Html.DropDownListFor(m => m.ProductStateId, new SelectList(Model.ProductStateTypes, "Value", "Text"), "Selectati starea", new { @class = "form-control" })
            <br /><br />

            @Html.Label("Description", "Descriere Anunt")
            <br />
            @Html.EditorFor(m => m.Description)
            <br /><br />

            @Html.Label("ReturnPolicy", "Politica de retur")
            <br />
            @Html.EditorFor(m => m.ReturnPolicy)
            @Html.ValidationMessageFor(model => model.ReturnPolicy, "Camp optional", new { @class = "text-info" })
            <br /><br />

            @Html.Label("Warranty", "Garantie")
            <br />
            @Html.EditorFor(m => m.Warranty)
            @Html.ValidationMessageFor(model => model.ReturnPolicy, "Camp optional", new { @class = "text-info" })
            <br /><br />

            @Html.Label("Site", "Link-ul site-ului de prezentare")
            <br />
            @Html.EditorFor(m => m.Site)
            @Html.ValidationMessageFor(model => model.ReturnPolicy, "Camp optional", new { @class = "text-info" })
            <br /><br />

        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel-heading">Modifica pretul si modalitatile de vanzare</div>
        <div class="panel-body">

            @Html.Label("Price", "Pret")
            <br />
            @Html.EditorFor(m => m.Price)
            <br /> <br />

            <label>Selectati Orasul</label>
            @Html.DropDownListFor(m => m.CityId, new SelectList(Model.Cities, "Value", "Text"), "Selectati orasul", new { @class = "form-control" })
            <br /><br />

            @Html.Label("PersonalDelivery", "Predare personala")
            <br />
            @if (Model.PersonalDelivery == true)
            {
                @Html.CheckBox("PersonalDelivery", true, new { @class = "checkbox" })
            }
            else
            {
                @Html.CheckBox("PersonalDelivery", false, new { @class = "checkbox" })
            }
            <br /> <br />

            <div class="panel panel-default">
                <div class="panel-heading">Livrare prin curier</div>
                <div class="panel-body">
                    <label>Selectati firma de curierat</label>
                    @Html.DropDownListFor(m => m.DeliveryCompanyId, new SelectList(Model.DeliveryCompanies, "Value", "Text"), "Selectati compania de curierat", new { @class = "form-control" })
                    <br /><br />

                    @Html.Label("DeliveryDetails", "Detalii livrare")
                    <br />
                    @Html.EditorFor(m => m.DeliveryDetails)
                    @Html.ValidationMessageFor(model => model.DeliveryDetails, "Camp optional", new { @class = "text-info" })
                    <br /><br />

                    @Html.Label("DeliveryPrice", "Cost Livrare")
                    <br />
                    @Html.EditorFor(m => m.DeliveryPrice)
                    @Html.ValidationMessageFor(model => model.DeliveryPrice, "Camp optional", new { @class = "text-info" })
                    <br /><br />
                </div>
            </div>

        </div>
    </div>

    <button class="btn btn-sm btn-success" type="submit">Modifica anunt</button>

</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.9.2/jquery-ui.js"></script>
<script type="text/javascript">
    //incarcarea initiala a celor 2 dropdown-uri
    $(document).ready(function () {
        $(document).ready(function () {
            //var cID = $("#catList").val();
            var cID = @ViewBag.CategoryId;
            $.getJSON("/Product/New/LoadSubCategories/" + cID, {},
                function (data) {
                    var select = $("#subcatList");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Selecteaza o subcategorie"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                    $("#catList").val(@ViewBag.CategoryId);
                    $("#subcatList").val(@Model.SubCategoryId);
                });
        });
    });

    //evenimentul change
    $(document).ready(function () {
        $(document).on("change", "#catList", function () {
            var cID = $(this).val();
            $.getJSON("/Product/New/LoadSubCategories/" + cID, {},
                function (data) {
                    var select = $("#subcatList");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Selecteaza o subcategorie"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                  });
        });
    });


</script>

@*  $(document).ready(function () {
        $(document).ready(function () {
            var cID = $("#catList").val();
            $.getJSON("/Product/New/LoadSubCategories/" + cID, {},
                function (data) {
                    var select = $("#subcatList");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Selecteaza o subcategorie"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                    $("#catList").val(@ViewBag.CategoryId);
                    $("#subcatList").val(@Model.SubCategoryId);
                });
        }); });

          $(document).on("change", "#catList", function () {
            var cID = $(this).val();
            $.getJSON("/Product/New/LoadSubCategories/" + cID, {},
                function (data) {
                    var select = $("#subcatList");
                    select.empty();
                    select.append($('<option/>', {
                        value: 0,
                        text: "Selecteaza o subcategorie"
                    }));
                    $.each(data, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.Value,
                            text: itemData.Text
                        }));
                    });
                });
        });
    });*@
